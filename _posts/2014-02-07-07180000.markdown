---
layout: post
title: '単語を使った特徴量をBasic Summarization Modelに組み込む（NLP, 自動文書要約）'
published: true
date: 2014-02-07 18:00
comments: true
categories:
- NLP
tags:
- DocumentSummarization
- NLP
keywords:
- NLP
- DocumentSummarization
- NLP
---
前回，

- [BasicSummarizationModelで文書要約(Python)](http://nktmemo.wordpress.com/2014/01/22/basic-summarization-model%e3%81%a7%e6%96%87%e6%9b%b8%e8%a6%81%e7%b4%84-python/ "BasicSummarizationModelで文書要約(Python)")

というのをやりました． 簡単に言うと，これは文をスコア付けして，スコアの高いものから要約として採用するというものでした． このモデルでは，各文は，<b>最初の文は最も重要であり，終わりに近づくにつれて文の重要度は減少していく</b> ， というsentence position hypothesisに基づいてスコア付けされる．

前回紹介した論文:

- [A Study on Position Information in Document Summarization](http://aclweb.org/anthology//C/C10/C10-2106.pdf "A Study on Position Information in Document Summarization")

では単語の特徴量をこのBasic Summarization Modelに組み込んだものを提案している． Studyというタイトルとおり，提案しているというよりは，調べていると言った方が良いのか． 基本的には， <b>ある単語の早い出現は情報をたくさんもっている．</b> というword position hypothesisに基づいて各単語の情報量の重みを表現する． これは単語そのものをスコア付けしていたのに対して，単語と出現回数（何回目の出現なのか）のペアでスコア付けをするというものだ． つまり，wという単語のi番目の出現をf(w, i)でスコア付けする． fをどうするか，については4つ程考察されていた．

- Direct proportion
- Inverse proportion
- Geometric sequence- Binary function

Basic Summarization Model では，各文を以下の関数でスコア付けする．

<p style="text-align:center;"> $$ \displaystyle    score(s) = \frac{1}{\|s\|} \sum_{i} \log freq(w_{i}) $$ </p>

ちなみに$$ \|s\|$$は文sに含まれる単語数． これを単語の持つ情報量の平均と解釈しているみたいだ． ちなみに単語wの持つ情報量info(w)は，

<p style="text-align:center;"> $$ \displaystyle    info(w) = - p(w) \log p(w) $$ </p>

だと思うがどうなのか．さてこのスコアに単語wの位置による特徴量pos(w)を以下のように組み込む．

<p style="text-align:center;"> $$ \displaystyle    score^{'}(s) = \frac{1}{\|s\|} \sum_{i} \log freq(w_{i}) pos(w_{i}) $$ </p>

これで単語の出現位置も考慮したスコア付けが可能になる． というわけで例のごとく実装してみた．[source code](https://github.com/nkt1546789/softcream/blob/master/summarization.py "source code")

<div id="outline-container-sec-1" class="outline-2"> <h2 id="sec-1">Result</h2> <div class="outline-text-2" id="text-1">  今回も前と同じ記事を要約してみる． 使う記事の全体は以下．  <pre class="example">
真に「使える」手書きメモアプリだと思わせてくれた『DioNote』
====================================================================================================
Android：手書きメモアプリが使えないのは過去の話になったかも。
「手書きメモアプリ」と聞くだけで、筆者は敬遠するところがありました。今までいくつかのアプリを試してきて、うまく文字が書けたり、正しく反映されたためしがなかったのです。大人しくキーボードから入力するメモが一番だ、と。
ですが、今回紹介する『DioNote』は、手書き反映の機敏さといい、認識力の高さといい、かなりの実力を持っていて、久々に「いいね！」と言いたくなるアプリでした。
加えて、画像の挿入や文字入力、メモのショートカットをホームに置けるなど、細かな機能も実装されており、あらゆる点からなかなか使える仕上がりとなっています。
早速、トップ画面右上のプラスマークからメモを作ってみます。ノートのようなデザインです。画面下部の領域に文字を手書きで入力していきます。一文字書いてみると、反応の正確さにビックリします。
すぐさま一文字書いたことが認識され、新たな文字、さらに新たな文字...と、そのテンポの良さも素晴らしい。ちなみに、一文字ずつだけでなく、横に連続で書いていくことも可能です。
画面右上のメニューから「キャンパス作成」をタップすると、真っさらな自由帳のような画面になります。ここでは画像の貼り付けも自由にでき、より気ままなメモを作成できます。
</pre>  実験結果は以下のようになった．上からBasic Summarization Model，direct proportion, inverse proportion, getometric sequence．  <pre class="example">
真に「使える」手書きメモアプリだと思わせてくれた『DioNote』
====================================================================================================
大人しくキーボードから入力するメモが一番だ、と。ノートのようなデザインです。画面下部の領域に文字を手書きで入力していきます。一文字書いてみると、反応の正確さにビックリします。すぐさま一文字書いたことが認識され、新たな文字、さらに新たな文字...と、そのテンポの良さも素晴らしい。

真に「使える」手書きメモアプリだと思わせてくれた『DioNote』
====================================================================================================
Android：手書きメモアプリが使えないのは過去の話になったかも。「手書きメモアプリ」と聞くだけで、筆者は敬遠するところがありました。今までいくつかのアプリを試してきて、うまく文字が書けたり、正しく反映されたためしがなかったのです。大人しくキーボードから入力するメモが一番だ、と。

真に「使える」手書きメモアプリだと思わせてくれた『DioNote』
====================================================================================================
Android：手書きメモアプリが使えないのは過去の話になったかも。「手書きメモアプリ」と聞くだけで、筆者は敬遠するところがありました。今までいくつかのアプリを試してきて、うまく文字が書けたり、正しく反映されたためしがなかったのです。大人しくキーボードから入力するメモが一番だ、と。ノートのようなデザインです。画面下部の領域に文字を手書きで入力していきます。

真に「使える」手書きメモアプリだと思わせてくれた『DioNote』
====================================================================================================
Android：手書きメモアプリが使えないのは過去の話になったかも。「手書きメモアプリ」と聞くだけで、筆者は敬遠するところがありました。今までいくつかのアプリを試してきて、うまく文字が書けたり、正しく反映されたためしがなかったのです。大人しくキーボードから入力するメモが一番だ、と。ノートのようなデザインです。
</pre> </div> </div> <div id="outline-container-sec-2" class="outline-2"> <h2 id="sec-2">Summary</h2> <div class="outline-text-2" id="text-2">  単語の位置情報を考慮した自動文書要約を試した． word position hypothesisが強すぎるのか，ほとんど最初の文が抽出される結果となった． 次回は僕オリジナルの方法を何か試せたらと思う．  </div> </div> 

